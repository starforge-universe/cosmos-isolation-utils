name: 'Release'

on:
  push:
    branches:
      - 'release/*'

jobs:
  # Extract version from branch name
  extract-version:
    name: 'Extract Version'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: 'Extract version from branch name'
        id: extract
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          VERSION=${BRANCH_NAME#release/}
          
          # Validate version format (basic semantic version check)
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format '$VERSION'. Expected format: X.Y.Z"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION from branch: $BRANCH_NAME"

  # Run checks first
  checks:
    name: 'Run Checks'
    needs: extract-version
    uses: ./.github/workflows/__call__checks.yaml

  # Build package
  build:
    name: 'Build Package'
    needs: [extract-version, checks]
    uses: ./.github/workflows/__call__build.yaml
    with:
      version: ${{ needs.extract-version.outputs.version }}

  # Publish to PyPI
  publish:
    name: 'Publish to PyPI'
    needs: [extract-version, build]
    if: github.ref_type == 'branch' && startsWith(github.ref_name, 'release/')
    uses: ./.github/workflows/__call__publish.yaml
    with:
      pypi-repository: ${{ vars.PYPI_REPOSITORY || 'https://pypi.org/simple/' }}
    secrets:
      pypi-username: ${{ secrets.PYPI_USERNAME }}
      pypi-password: ${{ secrets.PYPI_PASSWORD }}

  # Create release tag
  tag-release:
    name: 'Tag Release'
    needs: [extract-version, publish]
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch' && startsWith(github.ref_name, 'release/')
    permissions:
      contents: write
    steps:
      - name: 'Checkout project sources'
        uses: actions/checkout@v5

      - name: 'Create and push tag'
        run: |
          VERSION="${{ needs.extract-version.outputs.version }}"
          if [ -n "$VERSION" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag -a "v$VERSION" -m "Release version $VERSION"
            git push origin "v$VERSION"
          fi
